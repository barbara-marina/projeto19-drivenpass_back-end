// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum CardsType {
  credit
  debit
  both
}

model User {
  id Int @id @default(autoincrement())
  email String @unique
  password String
  createdAt DateTime @default(now())
  cards Card[]
  credentials Credential[]
  secureNotes SecureNote[]
  wifis Wifi[]
  sessions Session[]

  @@map("users")
}

model Card {
  id Int @id @default(autoincrement())
  userId Int
  user User @relation(fields: [userId], references: [id])
  label String
  number String
  name String
  cvv String
  expirationDate String
  isVirtual Boolean
  type CardsType
  createdAt DateTime @default(now())

  @@unique([userId, label])
  @@map("cards")
}

model Credential {
  id Int @id @default(autoincrement())
  userId Int
  user User @relation(fields: [userId], references: [id])
  label String
  url String
  name String
  password String
  createdAt DateTime @default(now())

  @@unique([userId, label])
  @@map("credentials")
}

model SecureNote {
  id Int @id @default(autoincrement())
  userId Int
  user User @relation(fields: [userId], references: [id])
  title String
  note String
  createdAt DateTime @default(now())

  @@unique([userId, title])
  @@map("secureNotes")
}

model Wifi {
  id Int @id @default(autoincrement())
  userId Int
  user User @relation(fields: [userId], references: [id])
  label String
  network String
  password String
  createdAt DateTime @default(now())

  @@unique([userId, label])
  @@map("wifis")
}

model Session {
  id Int @id @default(autoincrement())
  userId Int
  user User @relation(fields: [userId], references: [id])
  token String @unique
  createdAt DateTime @default(now())

  @@map("sessions")
}